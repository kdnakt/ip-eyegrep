{"version":3,"sources":["components/Questions.tsx","quiz/Quiz.ts","App.tsx","index.tsx"],"names":["Question","q","toRight","setRemaining","useState","result","setResult","style","marginLeft","onClick","valid","prev","textDecoration","ip","Questions","started","questions","i","len","length","push","key","id","easyTargets","normalTargets","shuffle","array","j","Math","floor","random","countInvalid","targets","filter","o","normalQuestions","invalidCount","easyQuestions","selectQuestions","level","reset","document","location","reload","App","setLevel","setStarted","passedSec","setPassedSec","useEffect","setInterval","clearInterval","remaining","alert","start","className","clear","href","undefined","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.192b5afe.chunk.js","sourcesContent":["import React, {FC, useState} from 'react';\nimport { Target } from '../quiz/Quiz';\n\ntype QuestionsProps = {\n  started: boolean,\n  questions: Target[],\n  setRemaining: (func: (n: number) => number) => void,\n};\n\nconst Question: React.FC<{\n  q: Target,\n  toRight: boolean,\n  setRemaining: (func: (n: number) => number) => void,\n}> = ({\n  q, toRight, setRemaining\n}) => {\n  const [result, setResult] = useState('');\n  return (\n    <div>\n      <span \n        style={{\n          marginLeft: toRight ? '60%' : '20%'\n        }}\n      >{result}</span>\n      <span\n        onClick={() => {\n          if (result) return;\n          if (!q.valid) {\n            setResult('○');\n            setRemaining(prev => prev - 1);\n          } else {\n            setResult('×');\n          }\n        }}\n        style={{\n          textDecoration: result ? 'line-through' : 'none',\n        }}\n      >\n        {q.ip}\n      </span>\n      <br />\n    </div>\n  );\n}\n\nconst Questions: FC<QuestionsProps> = ({\n  started,\n  questions,\n  setRemaining,\n}) => {\n  const result: JSX.Element[] = [];\n  if (started) {\n    for (let i = 0, len = questions.length; i < len; i++) {\n      result.push(\n        <Question\n          key={i}\n          q={questions[i]} toRight={i % 2 === 0}\n          setRemaining={setRemaining}\n        />\n      );\n    }\n  }\n  return (\n    <div id=\"question\">\n      {result}\n    </div>\n  )\n}\n\n\nexport default Questions;\n","\nexport type Target = {\n  ip: string;\n  valid: boolean;\n};\n\nexport type Level = \"easy\"\n  | \"normal\"\n  | \"hard\";\n\nconst easyTargets: Target[] = [\n  {\"ip\":\"10.0.0.0\",\"valid\":true},\n  {\"ip\":\"10.0.0,1\",\"valid\":false},\n  {\"ip\":\"10.0.0.2\",\"valid\":true},\n  {\"ip\":\"10.0.0.3\",\"valid\":true},\n  {\"ip\":\"10.０.0.4\",\"valid\":false},\n  {\"ip\":\"10.0.0.5\",\"valid\":true},\n  {\"ip\":\"10.0.0.6\",\"valid\":true},\n];\n\nconst normalTargets: Target[] = [\n  {\"ip\":\"10.0.0.0\",\"valid\":true},\n  {\"ip\":\"10.20.30.40\",\"valid\":true},\n  {\"ip\":\"10.120.3.243\",\"valid\":true},\n  {\"ip\":\"1o.202.56.139\",\"valid\":false},\n  {\"ip\":\"192.168.34.56\",\"valid\":true},\n  {\"ip\":\"19Z.168.45.67\",\"valid\":false},\n  {\"ip\":\"172.16.255.255\",\"valid\":true},\n  {\"ip\":\"172.17.255.254\",\"valid\":true},\n  {\"ip\":\"172.18.254.255\",\"valid\":true},\n  {\"ip\":\"172.19.255.255\",\"valid\":true},\n  {\"ip\":\"172.20.255.255\",\"valid\":true},\n  {\"ip\":\"172.21,255.255\",\"valid\":false},\n  {\"ip\":\"192.168.0.255\",\"valid\":true},\n  {\"ip\":\"192.168.1O0.255\",\"valid\":false},\n  {\"ip\":\"192.168.00.255\",\"valid\":false},\n  {\"ip\":\"10.200.300.400\",\"valid\":false},\n  {\"ip\":\"192.168.3B.48\",\"valid\":false},\n  {\"ip\":\"10.256.255.255\",\"valid\":false},\n  {\"ip\":\"192.l68.0.255\",\"valid\":false},\n  {\"ip\":\"10.0.1,2\",\"valid\":false}\n];\n\nconst shuffle = ([...array]: Target[]) => {\n  for (let i = array.length - 1; i >= 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));     [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nconst countInvalid = (targets: Target[]) => targets.filter(o => !o.valid).length;\n\ntype Questions = {\n  questions: Target[],\n  invalidCount: number,\n};\n\nconst normalQuestions: Questions = {\n  questions: shuffle(normalTargets),\n  invalidCount: countInvalid(normalTargets),\n};\nconst easyQuestions: Questions = {\n  questions: shuffle(easyTargets),\n  invalidCount: countInvalid(easyTargets),\n};\n\nexport const selectQuestions = (level: Level) => {\n  switch (level) {\n    case \"easy\":\n      return easyQuestions;\n    case \"normal\":\n      return normalQuestions;\n    default:\n      return normalQuestions;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport './my.css'\nimport Questions from './components/Questions';\nimport { Level, selectQuestions } from './quiz/Quiz';\n\nconst reset = () => {\n  document.location.reload()\n}\n\nfunction App() {\n  const [level, setLevel] = useState(\"normal\" as Level);\n  const questions = selectQuestions(level);\n  const [started, setStarted] = useState(false);\n  const [passedSec, setPassedSec] = useState(0);\n  useEffect(() => {\n    const id = setInterval(() => {\n      setPassedSec(prev => prev + 1);\n    }, 1000);\n    return () => clearInterval(id);\n  });\n  const [remaining, setRemaining] = useState(questions.invalidCount);\n  if (remaining === 0) {\n    alert(`クリアです！おめでとう🎉\\n\\nきろく${passedSec}びょう`);\n    reset();\n  }\n\n  const start = (level: Level) => {\n    setLevel(level);\n    setStarted(true);\n    setRemaining(selectQuestions(level).invalidCount);\n    setPassedSec(0);\n  };\n\n  return (\n    <>\n      <div>\n        <h2>IPアドレスまちがいさがし</h2>\n        <h5>ただしくないIPアドレスをクリックしてやっつけよう！</h5>\n        <h6>なんびょうでクリアできるかな？</h6>\n        {!started ? (\n          <div className=\"start-btns\">\n            <div className=\"start-btn start-btn-easy\" onClick={() => start(\"easy\")}>かんたん</div>  \n            <div className=\"start-btn start-btn-normal\" onClick={() => start(\"normal\")}>ふつう</div>  \n          </div>\n        ) : (\n          <>\n            <h5>あと{remaining}こ</h5>\n            <h5>きろく：{passedSec}びょう</h5>\n            <div id=\"btn\" onClick={reset}>さいしょから</div>\n          </>\n        )}\n      </div>\n      <div style={{clear:\"both\"}}>\n        <div id=\"question\">\n          <Questions started={started}\n            questions={questions.questions}\n            setRemaining={setRemaining}\n          />\n        </div>\n      </div>\n      <div>\n        <h6>\n          <span>v1.2.0</span>\n          <a href=\"https://twitter.com/kdnakt\">©︎ kdnakt</a>\n        </h6>\n        {started ? undefined : (\n          <h6>\n            <span>2020/03/13 v1.0.0</span>\n            <br /><br />\n            <span>2020/03/14 v1.1.0</span>\n            <br />\n            <span>ストップウォッチをついか</span>\n            <br /><br />\n            <span>2020/03/15 v1.2.0</span>\n            <br />\n            <span>かんたんモードをついか</span>\n          </h6>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}
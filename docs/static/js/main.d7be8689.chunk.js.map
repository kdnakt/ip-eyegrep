{"version":3,"sources":["App.tsx","index.tsx"],"names":["targets","invalidCount","filter","o","valid","length","questions","array","i","j","Math","floor","random","shuffle","Question","q","toRight","setRemaining","useState","result","setResult","style","marginLeft","onClick","prev","textDecoration","ip","reset","document","location","reload","App","started","setStarted","remaining","passedSec","setPassedSec","useEffect","id","setInterval","clearInterval","alert","len","push","useQuestions","href","undefined","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d7be8689.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './my.css'\n\ntype Target = {\n  ip: string;\n  valid: boolean;\n};\n\nconst targets: Target[] = [\n  {\"ip\":\"10.0.0.0\",\"valid\":true},\n  {\"ip\":\"10.20.30.40\",\"valid\":true},\n  {\"ip\":\"10.120.3.243\",\"valid\":true},\n  {\"ip\":\"1o.202.56.139\",\"valid\":false},\n  {\"ip\":\"192.168.34.56\",\"valid\":true},\n  {\"ip\":\"19Z.168.45.67\",\"valid\":false},\n  {\"ip\":\"172.16.255.255\",\"valid\":true},\n  {\"ip\":\"172.17.255.254\",\"valid\":true},\n  {\"ip\":\"172.18.254.255\",\"valid\":true},\n  {\"ip\":\"172.19.255.255\",\"valid\":true},\n  {\"ip\":\"172.20.255.255\",\"valid\":true},\n  {\"ip\":\"172.21,255.255\",\"valid\":false},\n  {\"ip\":\"192.168.0.255\",\"valid\":true},\n  {\"ip\":\"192.168.1O0.255\",\"valid\":false},\n  {\"ip\":\"192.168.00.255\",\"valid\":false},\n  {\"ip\":\"10.200.300.400\",\"valid\":false},\n  {\"ip\":\"192.168.3B.48\",\"valid\":false},\n  {\"ip\":\"10.256.255.255\",\"valid\":false},\n  {\"ip\":\"192.l68.0.255\",\"valid\":false},\n  {\"ip\":\"10.0.1,2\",\"valid\":false}\n];\n\nconst invalidCount = targets.filter(o => !o.valid).length;\n\nconst shuffle = ([...array]: Target[]) => {\n  for (let i = array.length - 1; i >= 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nconst questions = shuffle(targets);\n\nconst Question: React.FC<{\n  q: Target,\n  toRight: boolean,\n  setRemaining: (func: (n: number) => number) => void,\n}> = ({\n  q, toRight, setRemaining\n}) => {\n  const [result, setResult] = useState('');\n  return (\n    <>\n      <span \n        style={{\n          marginLeft: toRight ? '60%' : '20%'\n        }}\n      >{result}</span>\n      <span\n        onClick={() => {\n          if (result) return;\n          if (!q.valid) {\n            //alert('せいかい！');\n            setResult('○');\n            setRemaining(prev => prev - 1);\n          } else {\n            //alert('はずれ！');\n            setResult('×');\n          }\n        }}\n        style={{\n          textDecoration: result ? 'line-through' : 'none',\n        }}\n      >\n        {q.ip}\n      </span>\n      <br />\n    </>\n  );\n}\n\nconst useQuestions = (\n  started: boolean,\n  setRemaining: (func: (n: number) => number) => void,\n) => {\n  const result: JSX.Element[] = [];\n  if (!started) return result;\n  for (let i = 0, len = questions.length; i < len; i++) {\n    result.push(\n      <Question\n        q={questions[i]} toRight={i % 2 === 0}\n        setRemaining={setRemaining}\n      />\n    );\n  }\n  return result;\n}\n\nconst reset = () => {\n  document.location.reload()\n}\n\nfunction App() {\n  const [started, setStarted] = useState(false);\n  const [remaining, setRemaining] = useState(invalidCount);\n  //let [timer, setTimer] = useState(0);\n  const [passedSec, setPassedSec] = useState(0);\n  useEffect(() => {\n    const id = setInterval(() => {\n      setPassedSec(prev => prev + 1);\n    }, 1000);\n    return () => clearInterval(id);\n  });\n  if (remaining === 0) {\n    alert('クリアです！おめでとう🎉' + `\\n\\nきろく${passedSec}びょう`);\n    //window.clearInterval(timer);\n    reset();\n  }\n\n  return (\n    <div>\n      <header>\n        <h2>IPアドレスまちがいさがし</h2>\n        <h5>ただしくないIPアドレスをクリックしてやっつけよう！</h5>\n        <h6>なんびょうでクリアできるかな？</h6>\n        {!started ? (\n          <>\n            <div id=\"start-btn\" onClick={() => {\n              setStarted(true);\n              setPassedSec(0);\n            }}>スタート</div>  \n          </>\n        ) : (\n          <>\n            <h5>あと{remaining}こ</h5>\n            <h5>きろく：{passedSec}びょう</h5>\n            <div id=\"btn\" onClick={reset}>さいしょから</div>\n          </>\n        )}\n      </header>\n      <body>\n        <div id=\"question\">\n          {useQuestions(started, setRemaining)}\n        </div>\n      </body>\n      <footer>\n        <h6>\n          <span>v1.1.0</span>\n          <a href=\"https://twitter.com/kdnakt\">©︎ kdnakt</a>\n        </h6>\n        {started ? undefined : (\n          <h6>\n            <span>2020/03/13 v1.0.0</span>\n            <br />\n            <span>2020/03/14 v1.1.0</span>\n            <br />\n            <span>ストップウォッチ機能を追加</span>\n          </h6>\n        )}\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}